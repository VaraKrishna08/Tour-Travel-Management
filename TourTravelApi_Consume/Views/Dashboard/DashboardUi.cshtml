
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions {
    public string GetStatusClass(string status)
    {
        return status switch
        {
            "Confirmed" => "badge-success",
            "Pending" => "badge-warning",
            "Cancelled" => "badge-danger",
            _ => "badge-secondary"
        };
    }
}

<h2 class="text-center mb-4 fw-bold">Admin Dashboard</h2>
<style>

    /* Glass Effect Card */
    .glass-card {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(15px);
        border-radius: 15px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease-in-out, box-shadow 0.3s;
        padding: 20px;
        width: 350px; /* Medium size */
        height: auto; /* Keeps auto height */
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

        /* Hover Effect */
        .glass-card:hover {
            transform: scale(1.05);
            box-shadow: 0 12px 20px rgba(0, 0, 0, 0.3);
        }

    /* Chart Container - Keeps Chart Big Inside Card */
    .chart-container {
        width: 100%;
        max-width: 320px; /* Makes chart slightly bigger */
        height: 320px; /* Bigger chart size */
        display: flex;
        justify-content: center;
        align-items: center;
        flex-grow: 1; /* Allows chart to expand */
    }

    /* Ensure Chart Canvas Stretches Properly */
    canvas {
        width: 100% !important;
        height: 100% !important;
        max-width: 320px; /* Matches chart-container */
        max-height: 320px;
    }

    /* Badges */
    .badge {
        padding: 10px 15px;
        border-radius: 12px;
        font-size: 0.9rem;
        font-weight: bold;
    }

    /* Stats Cards */
    .stats-card {
        background: #fff;
        padding: 20px;
        border-radius: 12px;
        text-align: center;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-in-out;
    }

        .stats-card:hover {
            transform: scale(1.05);
        }

    /* Text Effects */
    .text-gradient {
        background: linear-gradient(to right, #007bff, #00c6ff);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .text-highlight {
        color: #ff6f61;
        font-size: 1.8rem;
    }

    /* Table Styling */
    .table {
        border-radius: 8px;
        overflow: hidden;
    }

    .booking-row:hover {
        background: #f8f9fa;
        transition: 0.3s;
    }

    /* Status Badges */
    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: bold;
    }

    .badge-success {
        background: #28a745;
        color: white;
    }

    .badge-warning {
        background: #ffc107;
        color: black;
    }

    .badge-danger {
        background: #dc3545;
        color: white;
    }

    .badge-secondary {
        background: #6c757d;
        color: white;
    }

</style>

<div class="row">
    <div class="col-md-3">
        <div class="card stats-card">
            <h5>Total Customers</h5>
            <h3>@ViewBag.TotalCustomers</h3>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card stats-card">
            <h5>Total Bookings</h5>
            <h3>@ViewBag.TotalBookings</h3>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card stats-card">
            <h5>Total Feedbacks</h5>
            <h3>@ViewBag.TotalFeedbacks</h3>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card stats-card">
            <h5>Total Destinations</h5> <!-- Destination Count -->
            <h3>@ViewBag.TotalDestinations</h3>
        </div>
    </div>
</div>

<h4 class="mt-4 fw-bold">Recent Bookings</h4>
<table class="table table-hover shadow-sm rounded">
    <thead class="table-dark">
        <tr>
            <th>Booking ID</th>
            <th>Customer Name</th>
            <th>Package</th>
            <th>Date</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        @if (ViewBag.RecentBookings != null)
        {
            foreach (var booking in ViewBag.RecentBookings)
            {
                        <tr class="booking-row">
                            <td>@booking.BookingID</td>
                            <td>@booking.FullName</td>
                            <td>@booking.PackageName</td>
                            <td>@booking.BookingDate.ToShortDateString()</td>
                            <td>
                                <span class="status-badge @GetStatusClass(booking.Status)">
                            @booking.Status
                                </span>
                            </td>
                        </tr>
            }
        }
    </tbody>
</table>



<h4 class="mt-4 fw-bold">Recent Feedback</h4>
<table class="table table-hover shadow-sm rounded">
    <thead class="table-dark">
        <tr>
            <th>Feedback ID</th>
            <th>Customer Name</th>
            <th>Rating</th>
            <th>Comments</th>
           
        </tr>
    </thead>
    <tbody>
        @if (ViewBag.feedbacks != null)
        {
            foreach (var f in ViewBag.feedbacks)
            {
                        <tr class="feedback-row">
                            <td>@f.FeedbackID</td>
                            <td>@f.FullName</td>
                            <td>@f.Rating</td>
                            <td>@f.Comments</td>
                           
                           
                        </tr>
            }
        }
    </tbody>
</table>

<h4 class="mt-4 fw-bold text-primary text-center">Popular Destinations</h4>
<div class="row">
    @if (ViewBag.Destinations != null && ViewBag.Destinations.Count > 0)
    {
        foreach (var destination in ViewBag.Destinations)
        {
            <div class="col-md-4 mb-4">
                <div class="card shadow-lg border-0 position-relative overflow-hidden glass-card">
                    <img src="@destination.ImageUrl" class="card-img-top" alt="@destination.DestinationName" style="height: 200px; object-fit: cover;">
                    <div class="card-body text-center">
                        <h5 class="card-title fw-bold">@destination.DestinationName</h5>
                        <p class="text-muted">@destination.Description</p>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p class="text-center text-danger">No destinations available.</p>
    }
</div>
<div class="container mt-5">
    <div class="row justify-content-center">
        <!-- Booking Statistics -->
        <div class="col-md-5">
            <div class="card glass-card shadow-lg text-center border-0 p-4">
                <div class="card-body">
                    <h5 class="card-title fw-bold text-gradient">Your Travelling Statistics</h5>
                    <div class="chart-container position-relative">
                        <canvas id="bookingChart"></canvas>
                    </div>
                    <p class="mt-3 fs-4 fw-bold text-highlight" id="bookingLabel">70%</p>
                    <div class="d-flex justify-content-center gap-3 mt-3">
                        <span class="badge bg-success">Completed</span>
                        <span class="badge bg-warning text-dark">Incomplete</span>
                        <span class="badge bg-danger">Cancelled</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Package Statistics -->
        <div class="col-md-5">
            <div class="card glass-card shadow-lg text-center border-0 p-4">
                <div class="card-body">
                    <h5 class="card-title fw-bold text-gradient">Package Availability</h5>
                    <div class="chart-container position-relative">
                        <canvas id="packageChart"></canvas>
                    </div>
                    <p class="mt-3 fs-4 fw-bold text-highlight" id="packageLabel">70%</p>
                    <div class="d-flex justify-content-center gap-3 mt-3">
                        <span class="badge bg-success">Available</span>
                        <span class="badge bg-warning text-dark">Not Available</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
            $(document).ready(function () {
                setTimeout(function () {
                    $('.alert-dismissible').fadeOut('slow');
                }, 3000);
            });

            function confirmDelete() {
                return confirm('Are You Sure You Want To Delete This Booking?');
            }

            var totalBookings = 0, confirmed = 0, pending = 0, cancelled = 0;
        @foreach (var booking in ViewBag.RecentBookings)
        {
            <text>
                            totalBookings++;
                            if ("@booking.Status" === "Confirmed") confirmed++;
                            if ("@booking.Status" === "Pending") pending++;
                            if ("@booking.Status" === "Cancelled") cancelled++;
            </text>
        }
    </script>
}
<!-- Chart.js -->

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
        document.addEventListener("DOMContentLoaded", function () {
        const bookingCtx = document.getElementById('bookingChart').getContext('2d');
        const packageCtx = document.getElementById('packageChart').getContext('2d');

        new Chart(bookingCtx, {
            type: 'doughnut',
            data: {
                labels: ['Completed', 'Incomplete', 'Cancelled'],
                datasets: [{
                    data: [70, 20, 10],
                    backgroundColor: ['#28a745', '#ffc107', '#dc3545'],
                    borderWidth: 2,
                    borderColor: '#ffffff',
                    hoverOffset: 10
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                cutout: '35%', // Makes the doughnut thicker
                layout: { padding: 10 },
                plugins: { legend: { display: false } }
            }
        });

        new Chart(packageCtx, {
            type: 'doughnut',
            data: {
                labels: ['Available', 'Not Available'],
                datasets: [{
                    data: [70, 30],
                    backgroundColor: ['#00FF7F', '#FFD700'],
                    borderWidth: 2,
                    borderColor: '#ffffff',
                    hoverOffset: 10
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                cutout: '35%', // Makes the doughnut thicker
                layout: { padding: 10 },
                plugins: { legend: { display: false } }
            }
        });
    });

</script>